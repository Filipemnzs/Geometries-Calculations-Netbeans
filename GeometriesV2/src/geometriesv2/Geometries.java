/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~
* <pre>
* Class             Geometries
* File              Geometries.java
* Description       Gets user input for Quadratic formula, Cramer's Rule, 
*                   Intersecting Lines, Rectangles, Cirlces, and Pythegeoran
*                   and calculates using various equations and a different class 
*                   for the calculations.
* @author           <i>Filipe Menezes</i>
* Enviroment        PC, Windows 10, NetBeans IDE 8.2, jdk 1.8.0_131
* Date              01/8/2019
* @version          1.0.0
* History Log
* @see              java.awt.Toolkit;
* @see              java.awt.Color;
* @see              java.lang.Float.parseDouble;
* @see              java.text.DecimalFormat;
* @see              java.text.SimpleDateFormat;
* @see              java.util.Date;
* @see              javax.swing.JOptionPane;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~ */
package geometriesv2;

import java.awt.Color;
import java.awt.Toolkit;
import static java.lang.Double.parseDouble;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author filip
 */
public class Geometries extends javax.swing.JFrame {

    /**
     * Creates new form Geometries
     */
    public Geometries() {
        initComponents();
        
        //center the form as it starts
        this.setLocationRelativeTo(null);
        
        //set icon for the form
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/geometriesv2/fx.jpg"));
        
        //set background for the form
        this.getContentPane().setBackground(Color.CYAN);
        
        //Adds the current date to the title of the main form        
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/DD/yyyy");
        this.setTitle("Geometries! " + dateFormat.format(date));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        GeometriesJTabbedPane = new javax.swing.JTabbedPane();
        QuadraticJPanel = new javax.swing.JPanel();
        QuadraticInputJPanel = new javax.swing.JPanel();
        AJLabel = new javax.swing.JLabel();
        AJTextField = new javax.swing.JTextField();
        BJLabel = new javax.swing.JLabel();
        BJTextField = new javax.swing.JTextField();
        CJLabel = new javax.swing.JLabel();
        CJTextField = new javax.swing.JTextField();
        QuadraticCalcJButton = new javax.swing.JButton();
        QuadraticClearJButton = new javax.swing.JButton();
        QuadraticSolutionJScrollPane = new javax.swing.JScrollPane();
        QuadraticSolutionJTextArea = new javax.swing.JTextArea();
        QuadraticInfoJScrollPane = new javax.swing.JScrollPane();
        QuadraticInfoJTextArea = new javax.swing.JTextArea();
        CramersRuleJPanel = new javax.swing.JPanel();
        CoefficientsJPanel = new javax.swing.JPanel();
        A1JLabel = new javax.swing.JLabel();
        A1JTextField = new javax.swing.JTextField();
        A2JLabel = new javax.swing.JLabel();
        A2JTextField = new javax.swing.JTextField();
        B1JLabel = new javax.swing.JLabel();
        B1JTextField = new javax.swing.JTextField();
        B2JLabel = new javax.swing.JLabel();
        B2JTextField = new javax.swing.JTextField();
        C1JLabel = new javax.swing.JLabel();
        C1JTextField = new javax.swing.JTextField();
        C2JLabel = new javax.swing.JLabel();
        C2JTextField = new javax.swing.JTextField();
        CramersInfoJScrollPane = new javax.swing.JScrollPane();
        CramersInfoJTextArea = new javax.swing.JTextArea();
        CramersCalcJButton = new javax.swing.JButton();
        CramersClearJButton = new javax.swing.JButton();
        CramersSolutionsJScrollPane = new javax.swing.JScrollPane();
        CramersSolutionJTextArea = new javax.swing.JTextArea();
        LinesJPanel = new javax.swing.JPanel();
        InputJPanel = new javax.swing.JPanel();
        X1JLabel = new javax.swing.JLabel();
        X1JTextField = new javax.swing.JTextField();
        Y1JLabel = new javax.swing.JLabel();
        Y1JTextField = new javax.swing.JTextField();
        X2JLabel = new javax.swing.JLabel();
        X2JTextField = new javax.swing.JTextField();
        Y2JLabel = new javax.swing.JLabel();
        Y2JTextField = new javax.swing.JTextField();
        X3JLabel = new javax.swing.JLabel();
        X3JTextField = new javax.swing.JTextField();
        Y3JLabel = new javax.swing.JLabel();
        Y3JTextField = new javax.swing.JTextField();
        X4JLabel = new javax.swing.JLabel();
        X4JTextField = new javax.swing.JTextField();
        Y4JLabel = new javax.swing.JLabel();
        Y4JTextField = new javax.swing.JTextField();
        LinesCalcJButton = new javax.swing.JButton();
        LinesClearJButton = new javax.swing.JButton();
        LinesSolutionJScrollPane = new javax.swing.JScrollPane();
        LinesSolutionJTextArea = new javax.swing.JTextArea();
        LinesInfoJScrollPane = new javax.swing.JScrollPane();
        LinesInfoJTextArea = new javax.swing.JTextArea();
        RectanglesJPanel = new javax.swing.JPanel();
        RectangleInputJPanel = new javax.swing.JPanel();
        RecX1JLabel = new javax.swing.JLabel();
        RecX1JTextField = new javax.swing.JTextField();
        RecY1JLabel = new javax.swing.JLabel();
        RecY1JTextField = new javax.swing.JTextField();
        RecH1JLabel = new javax.swing.JLabel();
        RecH1JTextField = new javax.swing.JTextField();
        RecW1JLabel = new javax.swing.JLabel();
        RecW1JTextField = new javax.swing.JTextField();
        RecX2JLabel = new javax.swing.JLabel();
        RecX2JTextField = new javax.swing.JTextField();
        RecY2JLabel = new javax.swing.JLabel();
        RecY2JTextField = new javax.swing.JTextField();
        RecH2JLabel = new javax.swing.JLabel();
        RecH2JTextField = new javax.swing.JTextField();
        RecW2JLabel = new javax.swing.JLabel();
        RecW2JTextField = new javax.swing.JTextField();
        RectangleCalcJButton = new javax.swing.JButton();
        RectangleClearJButton = new javax.swing.JButton();
        RectangleInfoJScrollPane = new javax.swing.JScrollPane();
        RectangleInfoJTextArea = new javax.swing.JTextArea();
        RectangleSolutionJScrollPane = new javax.swing.JScrollPane();
        RectangleSolutionJTextArea = new javax.swing.JTextArea();
        CirclesJPanel = new javax.swing.JPanel();
        CircleInputsJPanel = new javax.swing.JPanel();
        CircX1JLabel = new javax.swing.JLabel();
        CircX1JTextField = new javax.swing.JTextField();
        CircY1JLabel = new javax.swing.JLabel();
        CircY1JTextField = new javax.swing.JTextField();
        CircR1JLabel = new javax.swing.JLabel();
        CircR1JTextField = new javax.swing.JTextField();
        CircX2JLabel = new javax.swing.JLabel();
        CircX2JTextField = new javax.swing.JTextField();
        CircY2JLabel = new javax.swing.JLabel();
        CircY2JTextField = new javax.swing.JTextField();
        CircR2JLabel = new javax.swing.JLabel();
        CircR2JTextField = new javax.swing.JTextField();
        CirclesInfoJScrollPane = new javax.swing.JScrollPane();
        CirclesInfoJTextArea = new javax.swing.JTextArea();
        CircleCalculateJButton = new javax.swing.JButton();
        CircleClearJButton = new javax.swing.JButton();
        CirclesSolutionJScrollPane = new javax.swing.JScrollPane();
        CircleSolutionJTextArea = new javax.swing.JTextArea();
        PhythegeoranJPanel = new javax.swing.JPanel();
        PyInputsJPane = new javax.swing.JPanel();
        PyAJLabel = new javax.swing.JLabel();
        PyAJTextField = new javax.swing.JTextField();
        PyBJLabel = new javax.swing.JLabel();
        PyBJTextField = new javax.swing.JTextField();
        PyCJLabel = new javax.swing.JLabel();
        PyCJTextField = new javax.swing.JTextField();
        PyInfoJScrollPane = new javax.swing.JScrollPane();
        PyInfoJTextArea = new javax.swing.JTextArea();
        PyCalcJButton = new javax.swing.JButton();
        PyClearJButton = new javax.swing.JButton();
        PySolutionsJScrollPane = new javax.swing.JScrollPane();
        PySolutionsJTextArea = new javax.swing.JTextArea();
        GeometriesJMenuBar = new javax.swing.JMenuBar();
        FileJMenu = new javax.swing.JMenu();
        ClearJMenuItem = new javax.swing.JMenuItem();
        PrintJMenuItem = new javax.swing.JMenuItem();
        ExitJMenuItem = new javax.swing.JMenuItem();
        GeometriesJMenu = new javax.swing.JMenu();
        QuadraticJMenuItem = new javax.swing.JMenuItem();
        CramersJMenuItem = new javax.swing.JMenuItem();
        LinesJMenuItem = new javax.swing.JMenuItem();
        RectanglesJMenuItem = new javax.swing.JMenuItem();
        CirclesJMenuItem = new javax.swing.JMenuItem();
        PyJMenuItem = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        GeometriesJTabbedPane.setTabPlacement(javax.swing.JTabbedPane.RIGHT);

        QuadraticInputJPanel.setToolTipText("Enter the paramater for the Quadratic equation.");
        QuadraticInputJPanel.setLayout(new java.awt.GridLayout(3, 2, 2, 2));

        AJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AJLabel.setText("a:");
        QuadraticInputJPanel.add(AJLabel);
        QuadraticInputJPanel.add(AJTextField);

        BJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BJLabel.setText("b:");
        QuadraticInputJPanel.add(BJLabel);
        QuadraticInputJPanel.add(BJTextField);

        CJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CJLabel.setText("c:");
        QuadraticInputJPanel.add(CJLabel);
        QuadraticInputJPanel.add(CJTextField);

        QuadraticCalcJButton.setMnemonic('c');
        QuadraticCalcJButton.setText("Calculate");
        QuadraticCalcJButton.setToolTipText("Calculate using the Quadratic equation.");
        QuadraticCalcJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuadraticCalcJButtonActionPerformed(evt);
            }
        });

        QuadraticClearJButton.setMnemonic('l');
        QuadraticClearJButton.setText("Clear");
        QuadraticClearJButton.setToolTipText("Clears this tab.");
        QuadraticClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuadraticClearJButtonActionPerformed(evt);
            }
        });

        QuadraticSolutionJTextArea.setEditable(false);
        QuadraticSolutionJTextArea.setColumns(20);
        QuadraticSolutionJTextArea.setRows(5);
        QuadraticSolutionJScrollPane.setViewportView(QuadraticSolutionJTextArea);

        QuadraticInfoJTextArea.setEditable(false);
        QuadraticInfoJTextArea.setColumns(20);
        QuadraticInfoJTextArea.setRows(5);
        QuadraticInfoJTextArea.setText("Enter the three coefficients a, b, and c for the\nquadratic equation ax^2 + bx + c = 0 in order\nto determine the real roots fo the equation.\nMake sure a is not 0, else it will be a linear equation");
        QuadraticInfoJScrollPane.setViewportView(QuadraticInfoJTextArea);

        javax.swing.GroupLayout QuadraticJPanelLayout = new javax.swing.GroupLayout(QuadraticJPanel);
        QuadraticJPanel.setLayout(QuadraticJPanelLayout);
        QuadraticJPanelLayout.setHorizontalGroup(
            QuadraticJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuadraticJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuadraticJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuadraticInfoJScrollPane)
                    .addGroup(QuadraticJPanelLayout.createSequentialGroup()
                        .addComponent(QuadraticInputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(QuadraticJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuadraticCalcJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(QuadraticClearJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(QuadraticSolutionJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)))
                .addContainerGap())
        );
        QuadraticJPanelLayout.setVerticalGroup(
            QuadraticJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuadraticJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuadraticJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(QuadraticJPanelLayout.createSequentialGroup()
                        .addComponent(QuadraticCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(QuadraticClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(QuadraticInputJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(QuadraticSolutionJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(QuadraticInfoJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        GeometriesJTabbedPane.addTab("Quadratic", QuadraticJPanel);

        CoefficientsJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Coefficients of Lines"));
        CoefficientsJPanel.setToolTipText("Enter the cooefficients of the lines here.");
        CoefficientsJPanel.setLayout(new java.awt.GridLayout(3, 4, 2, 2));

        A1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        A1JLabel.setText("a1:");
        CoefficientsJPanel.add(A1JLabel);
        CoefficientsJPanel.add(A1JTextField);

        A2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        A2JLabel.setText("a2:");
        CoefficientsJPanel.add(A2JLabel);
        CoefficientsJPanel.add(A2JTextField);

        B1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        B1JLabel.setText("b1:");
        CoefficientsJPanel.add(B1JLabel);
        CoefficientsJPanel.add(B1JTextField);

        B2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        B2JLabel.setText("b2:");
        CoefficientsJPanel.add(B2JLabel);
        CoefficientsJPanel.add(B2JTextField);

        C1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        C1JLabel.setText("c1:");
        CoefficientsJPanel.add(C1JLabel);
        CoefficientsJPanel.add(C1JTextField);

        C2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        C2JLabel.setText("c2:");
        CoefficientsJPanel.add(C2JLabel);
        CoefficientsJPanel.add(C2JTextField);

        CramersInfoJTextArea.setEditable(false);
        CramersInfoJTextArea.setColumns(20);
        CramersInfoJTextArea.setRows(5);
        CramersInfoJTextArea.setText("Enter the coefficients a1, b1, c1, \na2, b2, c2 for the two lines: \na1x + b1y = c1 and a2x + b2y = c2.");
        CramersInfoJScrollPane.setViewportView(CramersInfoJTextArea);

        CramersCalcJButton.setMnemonic('c');
        CramersCalcJButton.setText("Calculate");
        CramersCalcJButton.setToolTipText("Calculate using Cramer's Rule.");
        CramersCalcJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CramersCalcJButtonActionPerformed(evt);
            }
        });

        CramersClearJButton.setMnemonic('l');
        CramersClearJButton.setText("Clear");
        CramersClearJButton.setToolTipText("Clears this tab of input.");
        CramersClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CramersClearJButtonActionPerformed(evt);
            }
        });

        CramersSolutionJTextArea.setEditable(false);
        CramersSolutionJTextArea.setColumns(20);
        CramersSolutionJTextArea.setRows(5);
        CramersSolutionsJScrollPane.setViewportView(CramersSolutionJTextArea);

        javax.swing.GroupLayout CramersRuleJPanelLayout = new javax.swing.GroupLayout(CramersRuleJPanel);
        CramersRuleJPanel.setLayout(CramersRuleJPanelLayout);
        CramersRuleJPanelLayout.setHorizontalGroup(
            CramersRuleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CramersRuleJPanelLayout.createSequentialGroup()
                .addGroup(CramersRuleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CramersInfoJScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CramersRuleJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CoefficientsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CramersRuleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CramersCalcJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(CramersClearJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CramersSolutionsJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                .addContainerGap())
        );
        CramersRuleJPanelLayout.setVerticalGroup(
            CramersRuleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CramersRuleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CramersRuleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CramersRuleJPanelLayout.createSequentialGroup()
                        .addComponent(CramersCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CramersClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CoefficientsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(CramersRuleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CramersInfoJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(CramersSolutionsJScrollPane))
                .addGap(37, 37, 37))
        );

        GeometriesJTabbedPane.addTab("Cramer's Rule", CramersRuleJPanel);

        InputJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Coordinate of four points"));
        InputJPanel.setToolTipText("Enter the coordinates of the 4 points here.");
        InputJPanel.setLayout(new java.awt.GridLayout(4, 2, 2, 2));

        X1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        X1JLabel.setText("X1:");
        InputJPanel.add(X1JLabel);
        InputJPanel.add(X1JTextField);

        Y1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Y1JLabel.setText("Y1:");
        InputJPanel.add(Y1JLabel);
        InputJPanel.add(Y1JTextField);

        X2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        X2JLabel.setText("X2:");
        InputJPanel.add(X2JLabel);
        InputJPanel.add(X2JTextField);

        Y2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Y2JLabel.setText("Y2:");
        InputJPanel.add(Y2JLabel);
        InputJPanel.add(Y2JTextField);

        X3JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        X3JLabel.setText("X3:");
        InputJPanel.add(X3JLabel);
        InputJPanel.add(X3JTextField);

        Y3JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Y3JLabel.setText("Y3:");
        InputJPanel.add(Y3JLabel);
        InputJPanel.add(Y3JTextField);

        X4JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        X4JLabel.setText("X4:");
        InputJPanel.add(X4JLabel);
        InputJPanel.add(X4JTextField);

        Y4JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Y4JLabel.setText("Y4:");
        InputJPanel.add(Y4JLabel);
        InputJPanel.add(Y4JTextField);

        LinesCalcJButton.setMnemonic('c');
        LinesCalcJButton.setText("Calculate");
        LinesCalcJButton.setToolTipText("Calculates where the line intercepts or if its parallel.");
        LinesCalcJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinesCalcJButtonActionPerformed(evt);
            }
        });

        LinesClearJButton.setMnemonic('l');
        LinesClearJButton.setText("Clear");
        LinesClearJButton.setToolTipText("Clears this tab from all input.");
        LinesClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinesClearJButtonActionPerformed(evt);
            }
        });

        LinesSolutionJTextArea.setEditable(false);
        LinesSolutionJTextArea.setColumns(20);
        LinesSolutionJTextArea.setRows(5);
        LinesSolutionJScrollPane.setViewportView(LinesSolutionJTextArea);

        LinesInfoJTextArea.setEditable(false);
        LinesInfoJTextArea.setColumns(20);
        LinesInfoJTextArea.setRows(5);
        LinesInfoJTextArea.setText("Enter the four points that generate the two lines: the \nfirst two for line 1 and the others for line 2.");
        LinesInfoJScrollPane.setViewportView(LinesInfoJTextArea);

        javax.swing.GroupLayout LinesJPanelLayout = new javax.swing.GroupLayout(LinesJPanel);
        LinesJPanel.setLayout(LinesJPanelLayout);
        LinesJPanelLayout.setHorizontalGroup(
            LinesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LinesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LinesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LinesJPanelLayout.createSequentialGroup()
                        .addComponent(InputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(LinesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LinesClearJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LinesCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(LinesInfoJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(LinesSolutionJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addContainerGap())
        );
        LinesJPanelLayout.setVerticalGroup(
            LinesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LinesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LinesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LinesSolutionJScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, LinesJPanelLayout.createSequentialGroup()
                        .addGroup(LinesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(LinesJPanelLayout.createSequentialGroup()
                                .addComponent(LinesCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(LinesClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(InputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LinesInfoJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );

        GeometriesJTabbedPane.addTab("Intersecting Lines", LinesJPanel);

        RectangleInputJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Coordinates, Height, and Width"));
        RectangleInputJPanel.setLayout(new java.awt.GridLayout(4, 2, 3, 3));

        RecX1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecX1JLabel.setText("X1:");
        RectangleInputJPanel.add(RecX1JLabel);
        RectangleInputJPanel.add(RecX1JTextField);

        RecY1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecY1JLabel.setText("Y1:");
        RectangleInputJPanel.add(RecY1JLabel);
        RectangleInputJPanel.add(RecY1JTextField);

        RecH1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecH1JLabel.setText("H1:");
        RectangleInputJPanel.add(RecH1JLabel);
        RectangleInputJPanel.add(RecH1JTextField);

        RecW1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecW1JLabel.setText("W1:");
        RectangleInputJPanel.add(RecW1JLabel);
        RectangleInputJPanel.add(RecW1JTextField);

        RecX2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecX2JLabel.setText("X2:");
        RectangleInputJPanel.add(RecX2JLabel);
        RectangleInputJPanel.add(RecX2JTextField);

        RecY2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecY2JLabel.setText("Y2:");
        RectangleInputJPanel.add(RecY2JLabel);
        RectangleInputJPanel.add(RecY2JTextField);

        RecH2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecH2JLabel.setText("H2:");
        RectangleInputJPanel.add(RecH2JLabel);
        RectangleInputJPanel.add(RecH2JTextField);

        RecW2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RecW2JLabel.setText("W2:");
        RectangleInputJPanel.add(RecW2JLabel);
        RectangleInputJPanel.add(RecW2JTextField);

        RectangleCalcJButton.setMnemonic('c');
        RectangleCalcJButton.setText("Calculate");
        RectangleCalcJButton.setToolTipText("Determines if the second rectangle is inside or overlaps the first.");
        RectangleCalcJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectangleCalcJButtonActionPerformed(evt);
            }
        });

        RectangleClearJButton.setMnemonic('l');
        RectangleClearJButton.setText("Clear");
        RectangleClearJButton.setToolTipText("Clears this tab.");
        RectangleClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectangleClearJButtonActionPerformed(evt);
            }
        });

        RectangleInfoJTextArea.setEditable(false);
        RectangleInfoJTextArea.setColumns(20);
        RectangleInfoJTextArea.setRows(5);
        RectangleInfoJTextArea.setText("Enter the center x-, y-coordinates, width,\nand height of two rectangles. Then,\ndetermening wheter the second rectangle\nis inside the first or overlaps with\nthe first.");
        RectangleInfoJScrollPane.setViewportView(RectangleInfoJTextArea);

        RectangleSolutionJTextArea.setEditable(false);
        RectangleSolutionJTextArea.setColumns(20);
        RectangleSolutionJTextArea.setRows(5);
        RectangleSolutionJScrollPane.setViewportView(RectangleSolutionJTextArea);

        javax.swing.GroupLayout RectanglesJPanelLayout = new javax.swing.GroupLayout(RectanglesJPanel);
        RectanglesJPanel.setLayout(RectanglesJPanelLayout);
        RectanglesJPanelLayout.setHorizontalGroup(
            RectanglesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RectanglesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RectanglesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RectangleInfoJScrollPane)
                    .addGroup(RectanglesJPanelLayout.createSequentialGroup()
                        .addComponent(RectangleInputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(RectanglesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RectangleCalcJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RectangleClearJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RectangleSolutionJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        RectanglesJPanelLayout.setVerticalGroup(
            RectanglesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RectanglesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RectanglesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RectangleSolutionJScrollPane)
                    .addGroup(RectanglesJPanelLayout.createSequentialGroup()
                        .addGroup(RectanglesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RectangleInputJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(RectanglesJPanelLayout.createSequentialGroup()
                                .addComponent(RectangleCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RectangleClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RectangleInfoJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );

        GeometriesJTabbedPane.addTab("Rectangles", RectanglesJPanel);

        CircleInputsJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Center Coordinate and Radii"));
        CircleInputsJPanel.setLayout(new java.awt.GridLayout(1, 1, 1, 2));

        CircX1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircX1JLabel.setText("X1:");
        CircleInputsJPanel.add(CircX1JLabel);
        CircleInputsJPanel.add(CircX1JTextField);

        CircY1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircY1JLabel.setText("Y1:");
        CircleInputsJPanel.add(CircY1JLabel);
        CircleInputsJPanel.add(CircY1JTextField);

        CircR1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircR1JLabel.setText("R1:");
        CircleInputsJPanel.add(CircR1JLabel);
        CircleInputsJPanel.add(CircR1JTextField);

        CircX2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircX2JLabel.setText("X2:");
        CircleInputsJPanel.add(CircX2JLabel);
        CircleInputsJPanel.add(CircX2JTextField);

        CircY2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircY2JLabel.setText("Y2:");
        CircleInputsJPanel.add(CircY2JLabel);
        CircleInputsJPanel.add(CircY2JTextField);

        CircR2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircR2JLabel.setText("R2:");
        CircleInputsJPanel.add(CircR2JLabel);
        CircleInputsJPanel.add(CircR2JTextField);

        CirclesInfoJTextArea.setEditable(false);
        CirclesInfoJTextArea.setColumns(20);
        CirclesInfoJTextArea.setRows(5);
        CirclesInfoJTextArea.setText("Enter the center coordinates and radii of \ntwo circles and determines whether the \nsecond circcle is inside the first or overlaps \nwith the first.");
        CirclesInfoJScrollPane.setViewportView(CirclesInfoJTextArea);

        CircleCalculateJButton.setMnemonic('c');
        CircleCalculateJButton.setText("Calculate");
        CircleCalculateJButton.setToolTipText("Determines if the second circle is inside or overlaps the first.");
        CircleCalculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CircleCalculateJButtonActionPerformed(evt);
            }
        });

        CircleClearJButton.setMnemonic('l');
        CircleClearJButton.setText("Clear");
        CircleClearJButton.setToolTipText("Clears this tab.");
        CircleClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CircleClearJButtonActionPerformed(evt);
            }
        });

        CircleSolutionJTextArea.setEditable(false);
        CircleSolutionJTextArea.setColumns(20);
        CircleSolutionJTextArea.setRows(5);
        CirclesSolutionJScrollPane.setViewportView(CircleSolutionJTextArea);

        javax.swing.GroupLayout CirclesJPanelLayout = new javax.swing.GroupLayout(CirclesJPanel);
        CirclesJPanel.setLayout(CirclesJPanelLayout);
        CirclesJPanelLayout.setHorizontalGroup(
            CirclesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CirclesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CirclesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CirclesJPanelLayout.createSequentialGroup()
                        .addComponent(CircleInputsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                        .addGap(23, 23, 23))
                    .addGroup(CirclesJPanelLayout.createSequentialGroup()
                        .addComponent(CirclesInfoJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CirclesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CircleCalculateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CircleClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CirclesSolutionJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        CirclesJPanelLayout.setVerticalGroup(
            CirclesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CirclesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CircleInputsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CirclesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CirclesJPanelLayout.createSequentialGroup()
                        .addComponent(CircleCalculateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CircleClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CirclesInfoJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(CirclesSolutionJScrollPane))
                .addContainerGap())
        );

        GeometriesJTabbedPane.addTab("Circles", CirclesJPanel);

        PyInputsJPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Right Triangle Legs"));
        PyInputsJPane.setLayout(new java.awt.GridLayout(1, 0, 3, 3));

        PyAJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PyAJLabel.setText("A:");
        PyInputsJPane.add(PyAJLabel);
        PyInputsJPane.add(PyAJTextField);

        PyBJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PyBJLabel.setText("B:");
        PyInputsJPane.add(PyBJLabel);
        PyInputsJPane.add(PyBJTextField);

        PyCJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PyCJLabel.setText("C:");
        PyInputsJPane.add(PyCJLabel);
        PyInputsJPane.add(PyCJTextField);

        PyInfoJTextArea.setEditable(false);
        PyInfoJTextArea.setColumns(20);
        PyInfoJTextArea.setRows(5);
        PyInfoJTextArea.setText("Takes inputs from 3 possible sides\nfrom a right triangle, the uses\nthe Pythegeoran Therom: \na^2 + b^2 = c^2. \nEnter 0 for the desired variable to \nbe solved for.\n");
        PyInfoJScrollPane.setViewportView(PyInfoJTextArea);

        PyCalcJButton.setMnemonic('c');
        PyCalcJButton.setText("Calculate");
        PyCalcJButton.setToolTipText("Uses the Pythegeoran Theorem to find the solution to the variable that has zero as the value.");
        PyCalcJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PyCalcJButtonActionPerformed(evt);
            }
        });

        PyClearJButton.setMnemonic('l');
        PyClearJButton.setText("Clear");
        PyClearJButton.setToolTipText("Clears this tab.");
        PyClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PyClearJButtonActionPerformed(evt);
            }
        });

        PySolutionsJTextArea.setEditable(false);
        PySolutionsJTextArea.setColumns(20);
        PySolutionsJTextArea.setRows(5);
        PySolutionsJTextArea.setWrapStyleWord(true);
        PySolutionsJScrollPane.setViewportView(PySolutionsJTextArea);

        javax.swing.GroupLayout PhythegeoranJPanelLayout = new javax.swing.GroupLayout(PhythegeoranJPanel);
        PhythegeoranJPanel.setLayout(PhythegeoranJPanelLayout);
        PhythegeoranJPanelLayout.setHorizontalGroup(
            PhythegeoranJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PhythegeoranJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PhythegeoranJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PhythegeoranJPanelLayout.createSequentialGroup()
                        .addComponent(PyInfoJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PhythegeoranJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PyCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PyClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PySolutionsJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
                    .addComponent(PyInputsJPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PhythegeoranJPanelLayout.setVerticalGroup(
            PhythegeoranJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PhythegeoranJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PyInputsJPane, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PhythegeoranJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PhythegeoranJPanelLayout.createSequentialGroup()
                        .addComponent(PyCalcJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PyClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PyInfoJScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .addComponent(PySolutionsJScrollPane, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        GeometriesJTabbedPane.addTab("Pythegeoran", PhythegeoranJPanel);

        FileJMenu.setMnemonic('a');
        FileJMenu.setText("File");

        ClearJMenuItem.setText("Clear All");
        ClearJMenuItem.setToolTipText("Clears all input from all tabs.");
        ClearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(ClearJMenuItem);

        PrintJMenuItem.setMnemonic('p');
        PrintJMenuItem.setText("Print");
        PrintJMenuItem.setToolTipText("Prints the current tab of the form.");
        PrintJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(PrintJMenuItem);

        ExitJMenuItem.setMnemonic('e');
        ExitJMenuItem.setText("Exit");
        ExitJMenuItem.setToolTipText("Close the program.");
        ExitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(ExitJMenuItem);

        GeometriesJMenuBar.add(FileJMenu);

        GeometriesJMenu.setText("Geometries Tabs");

        QuadraticJMenuItem.setMnemonic('q');
        QuadraticJMenuItem.setText("Quadratic");
        QuadraticJMenuItem.setToolTipText(" Swap to the Quadratic tab.");
        QuadraticJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuadraticJMenuItemActionPerformed(evt);
            }
        });
        GeometriesJMenu.add(QuadraticJMenuItem);

        CramersJMenuItem.setMnemonic('c');
        CramersJMenuItem.setText("Cramer's Rule");
        CramersJMenuItem.setToolTipText("Swap to the Cramer's Rule tab.");
        CramersJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CramersJMenuItemActionPerformed(evt);
            }
        });
        GeometriesJMenu.add(CramersJMenuItem);

        LinesJMenuItem.setMnemonic('i');
        LinesJMenuItem.setText("Intersecting Lines");
        LinesJMenuItem.setToolTipText("Swap to the Intersecting LInes tab.");
        LinesJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinesJMenuItemActionPerformed(evt);
            }
        });
        GeometriesJMenu.add(LinesJMenuItem);

        RectanglesJMenuItem.setMnemonic('r');
        RectanglesJMenuItem.setText("Rectangles");
        RectanglesJMenuItem.setToolTipText("Swap to the Rectangles tab.");
        RectanglesJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectanglesJMenuItemActionPerformed(evt);
            }
        });
        GeometriesJMenu.add(RectanglesJMenuItem);

        CirclesJMenuItem.setMnemonic('e');
        CirclesJMenuItem.setText("Circles");
        CirclesJMenuItem.setToolTipText("Swap to the Circles  tab.");
        CirclesJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CirclesJMenuItemActionPerformed(evt);
            }
        });
        GeometriesJMenu.add(CirclesJMenuItem);

        PyJMenuItem.setMnemonic('y');
        PyJMenuItem.setText("Pythegeoran");
        PyJMenuItem.setToolTipText("Swap to the Pythegeoran tab.");
        PyJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PyJMenuItemActionPerformed(evt);
            }
        });
        GeometriesJMenu.add(PyJMenuItem);

        GeometriesJMenuBar.add(GeometriesJMenu);

        setJMenuBar(GeometriesJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(GeometriesJTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GeometriesJTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CramersCalcJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CramersCalcJButtonActionPerformed
        //This code will store 6 coefficients and calculate using cramer's rule

        //Creates objects for the formating of decimal answers and to send inputs to the GeometriesCalculations.java class
        DecimalFormat fourDigits = new DecimalFormat("#,##0.0000");
        GeometriesCalculations Calculate;
        Calculate = new GeometriesCalculations();

        double a1 = 0, b1 = 0, c1 = 0, a2 = 0, b2 = 0, c2 = 0;

        try{
            a1 = parseDouble(A1JTextField.getText());
            b1 = parseDouble(B1JTextField.getText());
            c1 = parseDouble(C1JTextField.getText());
            a2 = parseDouble(A2JTextField.getText());
            b2 = parseDouble(B2JTextField.getText());
            c2 = parseDouble(C2JTextField.getText());
        }

        //catch if input is not numerical
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only enter numerical values for a, b and c.", "Input Error", JOptionPane.WARNING_MESSAGE);
            CramersClearJButton.doClick();
            A1JTextField.requestFocus();
        }

        //Check if the inputs will give a valid solution
        if (((a1 * a2) -(b1 * c1)) == 0){
            CramersSolutionJTextArea.setText("There is no solution.");
            CramersClearJButton.doClick();
        }
        else{

            //Find the point by calling the getCramer methods and output the results
            CramersSolutionJTextArea.setText("The point of intersection is (" + 
                    fourDigits.format(Calculate.getCramerX(a1,b1,c1,a2,b2,c2)) 
                    + ", " + fourDigits.format(Calculate.getCramerY(a1,b1,c1,a2,b2,c2)) + ").");
        }
    }//GEN-LAST:event_CramersCalcJButtonActionPerformed

    private void CramersClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CramersClearJButtonActionPerformed
        //Clears the all the text boxes in the Cramer's rule tab
        A1JTextField.setText("");
        B1JTextField.setText("");
        C1JTextField.setText("");
        A2JTextField.setText("");
        B2JTextField.setText("");
        C2JTextField.setText("");
        CramersSolutionJTextArea.setText("");
    }//GEN-LAST:event_CramersClearJButtonActionPerformed

    private void LinesCalcJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinesCalcJButtonActionPerformed
        //Gets input of 2 lines from user and calculates the intersection point

        //Creates objects for the formating of decimal answers and to send inputs to the GeometriesCalculations.java class
        DecimalFormat fourDigits = new DecimalFormat("#,##0.0000");
        GeometriesCalculations Calculate = new GeometriesCalculations();

        //Declare variables
        double x1 = 0, x2 = 0, x3 = 0, x4 = 0, y1 = 0, y2 = 0, y3 = 0, y4 = 0, pX, pY, denominator;

        //Check for correct input before storing it
        try{
            x1 = parseDouble(X1JTextField.getText());
            x2 = parseDouble(X2JTextField.getText());
            x3 = parseDouble(X3JTextField.getText());
            x4 = parseDouble(X4JTextField.getText());
            y1 = parseDouble(Y1JTextField.getText());
            y2 = parseDouble(Y2JTextField.getText());
            y3 = parseDouble(Y3JTextField.getText());
            y4 = parseDouble(Y4JTextField.getText());
        }

        //Catch if input is not numerical
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only enter numerical values for the two lines.", "Input Error", JOptionPane.WARNING_MESSAGE);
            LinesClearJButton.doClick();
            X1JTextField.requestFocus();
        }

        //Finding the demoninator first to evaluate if the lines are parallel or not
        denominator = Calculate.getDenominator(x1,x2,x3,x4,y1,y2,y3,y4);

        if (denominator != 0){
            //The demoninator is greater than 0 so then the point can be found
            pX = ((((x1 * y2)-(y1 * x2)) * (x3 - x4)) - ((x1 - x2) * (((x3 * y4) - (y3 * x4))))) / denominator;
            pY = ((((x1 * y2)-(y1 * x2)) * (y3 - y4)) - ((y1 - y2) * (((x3 * y4) - (y3 * x4))))) / denominator;

            //Output results
            LinesSolutionJTextArea.setText("The point of intersection is (" + 
                    fourDigits.format(pX) + ", " + fourDigits.format(pY) + ").");
        }

        //The denominator was 0 meaning the line is parallel
        else{
            LinesSolutionJTextArea.setText("The lines are parallel.");
            LinesClearJButton.doClick();
        }
    }//GEN-LAST:event_LinesCalcJButtonActionPerformed

    private void LinesClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinesClearJButtonActionPerformed
        //Clears all the text boxes in the lines tab
        X1JTextField.setText("");
        X2JTextField.setText("");
        X3JTextField.setText("");
        X4JTextField.setText("");
        Y1JTextField.setText("");
        Y2JTextField.setText("");
        Y3JTextField.setText("");
        Y4JTextField.setText("");
        LinesSolutionJTextArea.setText("");
    }//GEN-LAST:event_LinesClearJButtonActionPerformed

    private void RectangleCalcJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectangleCalcJButtonActionPerformed
        //Takes the central point, height, and width of 2 rectangles and checks if they are
        //inside eachother, interceting, the same, or outside eachother

        //Declare variables
        double x1 = 0, x2 = 0, y1 = 0, y2 = 0, h1 = 0, h2 = 0, w1 = 0, w2 = 0;

        //Getting inputs
        try{
            x1 = parseDouble(RecX1JTextField.getText());
            x2 = parseDouble(RecX2JTextField.getText());
            y1 = parseDouble(RecY1JTextField.getText());
            y2 = parseDouble(RecY2JTextField.getText());
            h1 = parseDouble(RecH1JTextField.getText());
            h2 = parseDouble(RecH2JTextField.getText());
            w1 = parseDouble(RecW1JTextField.getText());
            w2 = parseDouble(RecW2JTextField.getText());

        }

        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only enter numerical values for the two rectangles and center points.", "Input Error", JOptionPane.WARNING_MESSAGE);
            RectangleClearJButton.doClick();
            RecX1JTextField.requestFocus();
        }

        //Finding the distance between the x and y coordinates
        double xDiff = Math.abs(x1 - x2);
        double yDiff = Math.abs(y1 - y2);

        //Checking if rectangles are inside each other
        //Which rectangle is inside the other is determined by which width is larger
        if(xDiff < Math.abs(w1 - w2) && yDiff < Math.abs(h1 - h2) && w1 > w2){
            RectangleSolutionJTextArea.setText("Rectangle 2 is inside of rectangle 1.");

            if(xDiff < Math.abs(w1 - w2) && yDiff < Math.abs(h1 - h2) && w1 > w2){
                RectangleSolutionJTextArea.setText("Rectangle 1 is inside of rectangle 2.");
            }
        }

        //Checking if rectangles are overlaping if they are not inside each other
        else if(xDiff < Math.abs(w1 + w2) && yDiff < Math.abs(h1 + h2)){
            RectangleSolutionJTextArea.setText("Rectangle 2 overlaps rectangle 1.");

        }

        //The rectangles are not overlapping
        else{
            RectangleSolutionJTextArea.setText("Rectangle 2 does not overlap rectangle 1.");
        }
    }//GEN-LAST:event_RectangleCalcJButtonActionPerformed

    private void RectangleClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectangleClearJButtonActionPerformed
        //Clears the rectangle tab
        RecX1JTextField.setText("");
        RecX2JTextField.setText("");
        RecY1JTextField.setText("");
        RecY2JTextField.setText("");
        RecH1JTextField.setText("");
        RecH2JTextField.setText("");
        RecW1JTextField.setText("");
        RecW2JTextField.setText("");
        RectangleSolutionJTextArea.setText("");
    }//GEN-LAST:event_RectangleClearJButtonActionPerformed

    private void CircleCalculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CircleCalculateJButtonActionPerformed
        //Takes in the central point and radii of two circles and determines wether
        //the first circle is inside, intercepting or is the first circle

        //Creates object of the GeometriesCalculations class to calculate the distance between center points
        GeometriesCalculations Calculate = new GeometriesCalculations();
        

        //Declare variables
        double x1 = 0, x2 = 0, y1 = 0, y2 = 0, r1 = 0, r2 = 0;

        //Getting inputs
        try{
            x1 = parseDouble(CircX1JTextField.getText());
            x2 = parseDouble(CircX2JTextField.getText());
            y1 = parseDouble(CircY1JTextField.getText());
            y2 = parseDouble(CircY2JTextField.getText());
            r1 = parseDouble(CircR1JTextField.getText());
            r2 = parseDouble(CircR2JTextField.getText());

        }

        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only enter numerical values for the two circles and center points.", "Input Error", JOptionPane.WARNING_MESSAGE);
            CircleClearJButton.doClick();
            CircX1JTextField.requestFocus();
        }

        //Using the distance equation to find the distance betweent the two points
        double distance = Calculate.getDistanceCirc(x1,x2,y1,y2);

        //Checking if circles are inside each other
        //Which circle is inside the other is determined by which radius is larger
        if(r1 > r2 && distance <= (r1 - r2)){
            CircleSolutionJTextArea.setText("Circle 2 is inside of Circle 1.");
        }

        else if(r2 > r1 && distance <= (r1 - r2)){
            CircleSolutionJTextArea.setText("Circle 1 is inside of Circle 2.");
        }

        //Checking if circles are overlaping if they are not completely inside each other
        else if(distance < (r1 + r2)){
            CircleSolutionJTextArea.setText("Circle 2 overlaps Circle 1.");

        }

        //The circles are not overlapping
        else{
            CircleSolutionJTextArea.setText("Circle 2 does not overlap circle 1.");
        }
    }//GEN-LAST:event_CircleCalculateJButtonActionPerformed

    private void CircleClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CircleClearJButtonActionPerformed
        //Clears all input from the circle tab
        CircX1JTextField.setText("");
        CircX2JTextField.setText("");
        CircY1JTextField.setText("");
        CircY2JTextField.setText("");
        CircR1JTextField.setText("");
        CircR2JTextField.setText("");
        CircleSolutionJTextArea.setText("");
    }//GEN-LAST:event_CircleClearJButtonActionPerformed

    private void PyCalcJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PyCalcJButtonActionPerformed
        //Takes input from user for a b and c, decides which variable to solve for depending on which = 0

        //Creates object of the GeometriesCalculations class to calculate the distance between center points
        GeometriesCalculations Calculate = new GeometriesCalculations();
        DecimalFormat threeDigits = new DecimalFormat("#,##0.000");

        double a = 0, b = 0, c = 0;

        //check for legal input
        try{
            a = parseDouble(PyAJTextField.getText());
            b = parseDouble(PyBJTextField.getText());
            c = parseDouble(PyCJTextField.getText());

        }

        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only enter numerical values for a, b, and c.", "Input Error", JOptionPane.WARNING_MESSAGE);
            PyClearJButton.doClick();
            PyAJTextField.requestFocus();
        }

        //If numbers are positive output the solution
        if (a >= 0 && b >= 0 && c >= 0){

            PySolutionsJTextArea.setText("The solution for the desired varible is: " + threeDigits.format(Calculate.getPythegeoran(a, b, c)));
        }

        else{
            JOptionPane.showMessageDialog(null, "Please make sure all inputs are positive.", "Input Error", JOptionPane.WARNING_MESSAGE);
            PyClearJButton.doClick();
            PyAJTextField.requestFocus();
        }
    }//GEN-LAST:event_PyCalcJButtonActionPerformed

    private void PyClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PyClearJButtonActionPerformed
        //Clear the pythegeoran tab of inputs and outputs
        PyAJTextField.setText("");
        PyBJTextField.setText("");
        PyCJTextField.setText("");
    }//GEN-LAST:event_PyClearJButtonActionPerformed

    private void ClearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearJMenuItemActionPerformed
        //Clears all input from forms
        QuadraticClearJButton.doClick();
        CramersClearJButton.doClick();
        LinesClearJButton.doClick();
        RectangleClearJButton.doClick();
        CircleClearJButton.doClick();
        PyClearJButton.doClick();
        GeometriesJTabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_ClearJMenuItemActionPerformed

    private void QuadraticJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuadraticJMenuItemActionPerformed
        //Changes to the Quadratic tab
        GeometriesJTabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_QuadraticJMenuItemActionPerformed

    private void CramersJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CramersJMenuItemActionPerformed
        //Changes to the Cramer's Rule tab
        GeometriesJTabbedPane.setSelectedIndex(1);
    }//GEN-LAST:event_CramersJMenuItemActionPerformed

    private void LinesJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinesJMenuItemActionPerformed
        //Changes to the Intersecting Lines tab
        GeometriesJTabbedPane.setSelectedIndex(2);
    }//GEN-LAST:event_LinesJMenuItemActionPerformed

    private void RectanglesJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectanglesJMenuItemActionPerformed
        //Changes to the Rectangles tab
        GeometriesJTabbedPane.setSelectedIndex(3);
    }//GEN-LAST:event_RectanglesJMenuItemActionPerformed

    private void CirclesJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CirclesJMenuItemActionPerformed
        //Changes to the Circles tab
        GeometriesJTabbedPane.setSelectedIndex(4);
    }//GEN-LAST:event_CirclesJMenuItemActionPerformed

    private void PyJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PyJMenuItemActionPerformed
        //Changes to the Pythegeoran tab
        GeometriesJTabbedPane.setSelectedIndex(5);
    }//GEN-LAST:event_PyJMenuItemActionPerformed

    private void PrintJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintJMenuItemActionPerformed
        /*Calls to the PrintUtilities class in order to print the form 
        @author Filipe Menezes*/
        PrintUtilities printHelper = new PrintUtilities(this);
        printHelper.print();
    }//GEN-LAST:event_PrintJMenuItemActionPerformed

    private void ExitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitJMenuItemActionPerformed
        /*Closes the program
        @author Filipe Menezes*/
        System.exit(0);
    }//GEN-LAST:event_ExitJMenuItemActionPerformed

    private void QuadraticCalcJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuadraticCalcJButtonActionPerformed
        /*This code will store the user input and calculate the real roots
        using the quadratic equation
        @author Filipe Menezes
        @param  a - coefficient of squared variable
        @param  b - coefficient of second variable
        @param  c - last term in the equation*/

        DecimalFormat fourDigits = new DecimalFormat("#,##0.0000");
        GeometriesCalculations Calculate = new GeometriesCalculations();

        double a = 0, b = 0, c = 0, r1, r2;

        //Try getting input
        try{
            a = parseDouble(AJTextField.getText());
            b = parseDouble(BJTextField.getText());
            c = parseDouble(CJTextField.getText());
        }

        //catch if input is not numerical
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only enter numerical values for a, b and c.", "Input Error", JOptionPane.WARNING_MESSAGE);
            QuadraticClearJButton.doClick();
            AJTextField.requestFocus();
            
        }

        //Check if the value for a is legal
        if(a == 0){
            JOptionPane.showMessageDialog(null, "The value for a can not be 0.");
            QuadraticClearJButton.doClick();
            AJTextField.requestFocus();
        }

        else{

            double discriminant = Calculate.getDiscriminat(a, b, c);

            if (discriminant > 0){
                //The equation has 2 real roots (i.e. a=2 b=2 c=-5)

                //Calculate both of the roots
                r1 = (float) (((-1 * b) + (Math.sqrt(discriminant)))/ (2 * a));
                r2 = (float) (((-1 * b) - (Math.sqrt(discriminant)))/ (2 * a));

                //Display results
                QuadraticSolutionJTextArea.setText("r1 = " + fourDigits.format(r1) + "\n" + "r2 = " + fourDigits.format(r2) + "\nTwo real solutions." );
            }

            else if(discriminant == 0){
                //the equation has 1 real root (i.e. a=-4 b=12 c=-9)

                //Calculate the only root since the discriminant is 0
                r1 = (-1 * b) / (2 * a);

                //Display the result
                QuadraticSolutionJTextArea.setText("r = " + r1 + "\nOne real solution.");
                
            }

            else{
                //if the discriminant is negative the equation has no real roots
                QuadraticSolutionJTextArea.setText("The equation has no real roots.");
            }
}
    }//GEN-LAST:event_QuadraticCalcJButtonActionPerformed

    private void QuadraticClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuadraticClearJButtonActionPerformed
        //Clears Quadratic tab of all input and output
        AJTextField.setText("");
        BJTextField.setText("");
        CJTextField.setText("");
        QuadraticSolutionJTextArea.setText("");
    }//GEN-LAST:event_QuadraticClearJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Geometries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Geometries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Geometries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Geometries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Geometries().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A1JLabel;
    private javax.swing.JTextField A1JTextField;
    private javax.swing.JLabel A2JLabel;
    private javax.swing.JTextField A2JTextField;
    private javax.swing.JLabel AJLabel;
    private javax.swing.JTextField AJTextField;
    private javax.swing.JLabel B1JLabel;
    private javax.swing.JTextField B1JTextField;
    private javax.swing.JLabel B2JLabel;
    private javax.swing.JTextField B2JTextField;
    private javax.swing.JLabel BJLabel;
    private javax.swing.JTextField BJTextField;
    private javax.swing.JLabel C1JLabel;
    private javax.swing.JTextField C1JTextField;
    private javax.swing.JLabel C2JLabel;
    private javax.swing.JTextField C2JTextField;
    private javax.swing.JLabel CJLabel;
    private javax.swing.JTextField CJTextField;
    private javax.swing.JLabel CircR1JLabel;
    private javax.swing.JTextField CircR1JTextField;
    private javax.swing.JLabel CircR2JLabel;
    private javax.swing.JTextField CircR2JTextField;
    private javax.swing.JLabel CircX1JLabel;
    private javax.swing.JTextField CircX1JTextField;
    private javax.swing.JLabel CircX2JLabel;
    private javax.swing.JTextField CircX2JTextField;
    private javax.swing.JLabel CircY1JLabel;
    private javax.swing.JTextField CircY1JTextField;
    private javax.swing.JLabel CircY2JLabel;
    private javax.swing.JTextField CircY2JTextField;
    private javax.swing.JButton CircleCalculateJButton;
    private javax.swing.JButton CircleClearJButton;
    private javax.swing.JPanel CircleInputsJPanel;
    private javax.swing.JTextArea CircleSolutionJTextArea;
    private javax.swing.JScrollPane CirclesInfoJScrollPane;
    private javax.swing.JTextArea CirclesInfoJTextArea;
    private javax.swing.JMenuItem CirclesJMenuItem;
    private javax.swing.JPanel CirclesJPanel;
    private javax.swing.JScrollPane CirclesSolutionJScrollPane;
    private javax.swing.JMenuItem ClearJMenuItem;
    private javax.swing.JPanel CoefficientsJPanel;
    private javax.swing.JButton CramersCalcJButton;
    private javax.swing.JButton CramersClearJButton;
    private javax.swing.JScrollPane CramersInfoJScrollPane;
    private javax.swing.JTextArea CramersInfoJTextArea;
    private javax.swing.JMenuItem CramersJMenuItem;
    private javax.swing.JPanel CramersRuleJPanel;
    private javax.swing.JTextArea CramersSolutionJTextArea;
    private javax.swing.JScrollPane CramersSolutionsJScrollPane;
    private javax.swing.JMenuItem ExitJMenuItem;
    private javax.swing.JMenu FileJMenu;
    private javax.swing.JMenu GeometriesJMenu;
    private javax.swing.JMenuBar GeometriesJMenuBar;
    private javax.swing.JTabbedPane GeometriesJTabbedPane;
    private javax.swing.JPanel InputJPanel;
    private javax.swing.JButton LinesCalcJButton;
    private javax.swing.JButton LinesClearJButton;
    private javax.swing.JScrollPane LinesInfoJScrollPane;
    private javax.swing.JTextArea LinesInfoJTextArea;
    private javax.swing.JMenuItem LinesJMenuItem;
    private javax.swing.JPanel LinesJPanel;
    private javax.swing.JScrollPane LinesSolutionJScrollPane;
    private javax.swing.JTextArea LinesSolutionJTextArea;
    private javax.swing.JPanel PhythegeoranJPanel;
    private javax.swing.JMenuItem PrintJMenuItem;
    private javax.swing.JLabel PyAJLabel;
    private javax.swing.JTextField PyAJTextField;
    private javax.swing.JLabel PyBJLabel;
    private javax.swing.JTextField PyBJTextField;
    private javax.swing.JLabel PyCJLabel;
    private javax.swing.JTextField PyCJTextField;
    private javax.swing.JButton PyCalcJButton;
    private javax.swing.JButton PyClearJButton;
    private javax.swing.JScrollPane PyInfoJScrollPane;
    private javax.swing.JTextArea PyInfoJTextArea;
    private javax.swing.JPanel PyInputsJPane;
    private javax.swing.JMenuItem PyJMenuItem;
    private javax.swing.JScrollPane PySolutionsJScrollPane;
    private javax.swing.JTextArea PySolutionsJTextArea;
    private javax.swing.JButton QuadraticCalcJButton;
    private javax.swing.JButton QuadraticClearJButton;
    private javax.swing.JScrollPane QuadraticInfoJScrollPane;
    private javax.swing.JTextArea QuadraticInfoJTextArea;
    private javax.swing.JPanel QuadraticInputJPanel;
    private javax.swing.JMenuItem QuadraticJMenuItem;
    private javax.swing.JPanel QuadraticJPanel;
    private javax.swing.JScrollPane QuadraticSolutionJScrollPane;
    private javax.swing.JTextArea QuadraticSolutionJTextArea;
    private javax.swing.JLabel RecH1JLabel;
    private javax.swing.JTextField RecH1JTextField;
    private javax.swing.JLabel RecH2JLabel;
    private javax.swing.JTextField RecH2JTextField;
    private javax.swing.JLabel RecW1JLabel;
    private javax.swing.JTextField RecW1JTextField;
    private javax.swing.JLabel RecW2JLabel;
    private javax.swing.JTextField RecW2JTextField;
    private javax.swing.JLabel RecX1JLabel;
    private javax.swing.JTextField RecX1JTextField;
    private javax.swing.JLabel RecX2JLabel;
    private javax.swing.JTextField RecX2JTextField;
    private javax.swing.JLabel RecY1JLabel;
    private javax.swing.JTextField RecY1JTextField;
    private javax.swing.JLabel RecY2JLabel;
    private javax.swing.JTextField RecY2JTextField;
    private javax.swing.JButton RectangleCalcJButton;
    private javax.swing.JButton RectangleClearJButton;
    private javax.swing.JScrollPane RectangleInfoJScrollPane;
    private javax.swing.JTextArea RectangleInfoJTextArea;
    private javax.swing.JPanel RectangleInputJPanel;
    private javax.swing.JScrollPane RectangleSolutionJScrollPane;
    private javax.swing.JTextArea RectangleSolutionJTextArea;
    private javax.swing.JMenuItem RectanglesJMenuItem;
    private javax.swing.JPanel RectanglesJPanel;
    private javax.swing.JLabel X1JLabel;
    private javax.swing.JTextField X1JTextField;
    private javax.swing.JLabel X2JLabel;
    private javax.swing.JTextField X2JTextField;
    private javax.swing.JLabel X3JLabel;
    private javax.swing.JTextField X3JTextField;
    private javax.swing.JLabel X4JLabel;
    private javax.swing.JTextField X4JTextField;
    private javax.swing.JLabel Y1JLabel;
    private javax.swing.JTextField Y1JTextField;
    private javax.swing.JLabel Y2JLabel;
    private javax.swing.JTextField Y2JTextField;
    private javax.swing.JLabel Y3JLabel;
    private javax.swing.JTextField Y3JTextField;
    private javax.swing.JLabel Y4JLabel;
    private javax.swing.JTextField Y4JTextField;
    private javax.swing.JMenu jMenu1;
    // End of variables declaration//GEN-END:variables
}
